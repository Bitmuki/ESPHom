esphome:
  name: hempy
  friendly_name: Hempy
  on_boot:
    priority: 10
    then:
      - rtttl.play:
           rtttl: 'mario:d=4,o=5,b=100:16e6,16e6,32p,8e6,16c6,8e6,8g6,8p,8g,8p,8c6,16p,8g,16p,8e,16p,8a,8b,16a#,8a,16g.,16e6,16g6,8a6,16f6,8g6,8e6,16c6,16d6,8b,16p,8c6,16p,8g,16p,8e,16p,8a,8b,16a#,8a,16g.,16e6,16g6,8a6,16f6,8g6,8e6,16c6,16d6,8b,8p,16g6,16f#6,16f6,16d#6,16p,16e6,16p,16g#,16a,16c6,16p,16a,16c6,16d6,8p,16g6,16f#6,16f6,16d#6,16p,16e6,16p,16c7,16p,16c7,16c7,p,16g6,16f#6,16f6,16d#6,16p,16e6,16p,16g#,16a,16c6,16p,16a,16c6,16d6,8p,16d#6,8p,16d6,8p,16c6'

external_components:
  - source:
      type: git
      url: https://github.com/Bitmuki/ESPHome
      ref: main
      #path: components 
    components: [ hempy ]
    refresh: 60s

rp2040:
  board: rpipicow
  framework:
    # Required until https://github.com/platformio/platform-raspberrypi/pull/36 is merged
    platform_version: https://github.com/maxgerhardt/platform-raspberrypi.git

logger:
  level: DEBUG

debug:
  update_interval: 60s

text_sensor:
  - platform: debug
    device:
      name: "Device Info"
    reset_reason:
      name: "Reset Reason"

# Enable Home Assistant API
api:
  encryption:
    key: !secret hempy_encryption_key

# Enable Over The Air updates
ota:
  - platform: esphome
    password: !secret hempy_ota_password

# Setup WiFi connection
wifi:
  ssid: !secret hempy_wifi_ssid
  password: !secret hempy_wifi_password

# Enable fallback hotspot in case WiFi connection fails
  ap:
    ssid: "Hempy Fallback Hotspot"
    password: !secret hempy_wifi_password

output:
  - platform: gpio # Pico W built-in LED
    pin: 32
    id: led
  - platform: rp2040_pwm     # Buzzer. For ESP chips use platform: esp8266_pwm
    pin: 2
    id: buzzer
  - platform: gpio  # Relay to power water pump for Bucket 1
    pin: 10  # Relay's IN pin
    id: relay_pump1
    inverted: true   # Negative logic (false turns it on)
  - platform: gpio  # Relay to power water pump for Bucket 2
    pin: 11   # Relay's IN pin
    id: relay_pump2
    inverted: true   # Negative logic (false turns it on)

switch:
  - platform: output
    name: "Pump 1"
    output: relay_pump1    
  - platform: output
    name: "Pump 2"
    output: relay_pump2

rtttl:  #Ring Tone Text Transfer Language
  output: buzzer
  on_finished_playback:
    - logger.log: 'Song ended!'

interval:
  - interval: 2000ms # Heart beat - Blink built-in LED every 2sec
    then:
      - output.turn_on: led
      - delay: 1000ms
      - output.turn_off: led

sensor:
  #Debug
  - platform: debug
    loop_time:
      name: "Loop Time"    
  #HX711 - Bucket 1 weight sensor
  - platform: hx711
    id: weight_sensor1
    name: "HX711 Value"
    unit_of_measurement: "kg"
    icon: "mdi:weight-kilogram"
    dout_pin: 7
    clk_pin: 6
    gain: 128
    update_interval: 5s
    accuracy_decimals: 2   
    filters:
      - calibrate_linear:
          - -73300 -> 0  #Raw reading when the weight sensor has no weigth on it
          - -221100 -> 2  #Raw reading of an object with a known wight      
   #Internal temperature sensor
  - platform: internal_temperature
    name: "Internal Temperature"
    unit_of_measurement: "Â°C"
    icon: "mdi:water-percent"
    device_class: "temperature"
    state_class: "measurement"
    accuracy_decimals: 1
    update_interval: 5s
    filters:
      - sliding_window_moving_average:
          window_size: 15
          send_every: 15
      # - median:
      #   window_size: 10 #calculate median based on the last 10 readings

number:
  - platform: template
    name: "Start Watering Weight"
    id: start_watering_weight
    min_value: 0
    max_value: 20
    step: 0.1
    optimistic: true
    restore_value: true
  - platform: template
    name: "Stop Watering Weight"
    id: stop_watering_weight
    min_value: 0
    max_value: 25
    step: 0.1
    optimistic: true
    restore_value: true

hempy:
  id: hempy1
  weight_sensor: weight_sensor1  # Reference the weight sensor by its ID
  start_watering_weight: start_watering_weight
  stop_watering_weight: stop_watering_weight
  update_interval: 5s